# itk-version: 2.0.1
version: "3"

networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false

services:
  mariadb:
    image: itkdev/mariadb:latest
    networks:
      - app
    ports:
      - '3306'
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      #- ENCRYPT=1 # Uncomment to enable database encryption.
    volumes:
      - db-data:/var/lib/mysql

  db-backup:
    image: databack/mysql-backup
    networks:
      - app
    depends_on:
      - mariadb
    volumes:
      - /home/dkagms/bibbox-website-backup:/db
    environment:
      - DB_DUMP_TARGET=/db
      - DB_USER=${MYSQL_USER}
      - DB_PASS=${MYSQL_PASSWORD}
      - DB_SERVER=mariadb
      - DB_DUMP_BEGIN=+3

  phpfpm:
    image: itkdev/php8.0-fpm:latest
    networks:
      - app
    environment:
      - XDEBUG_MODE=${XDEBUG_MODE:-off}
      - XDEBUG_SESSION=${XDEBUG_SESSION:-0}
      - PHP_MAX_EXECUTION_TIME=30
      - PHP_MEMORY_LIMIT=256M
      # - PHP_MAIL=1 # Uncomment to enable mailhog.
      - PHP_IDE_CONFIG=serverName=localhost
      - DOCKER_HOST_DOMAIN=${COMPOSE_DOMAIN}
      - COMPOSER_VERSION=2
    depends_on:
      - mariadb
      - memcached
    volumes:
      - .:/app:delegated

  nginx:
    image: nginx:latest
    networks:
      - app
      - frontend
    depends_on:
      - phpfpm
      - engine
    ports:
      - '80'
    volumes:
      - ${PWD}/.docker/vhost.conf:/etc/nginx/conf.d/default.conf:ro
      - .:/app:delegated
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_DOMAIN}`)"
  #      HTTPS config - uncomment to enable redirect from :80 to :443
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  engine:
    image: node:14
    networks:
      - app
    working_dir: /app
    environment:
      - NODE_ENV=development
    volumes:
      - ./engine:/app:delegated
    command: npm run dev

  frontend:
    image: node:14
    command: npm run watch
    networks:
      - app
    working_dir: /app
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app:delegated

  logstash:
    image: docker.elastic.co/logstash/logstash:7.9.1
    networks:
      - app
    ports:
      - '28777'
    volumes:
      - ${PWD}/.docker/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ${PWD}/.docker/jvm.options:/usr/share/logstash/config/jvm.options:ro
      - .docker/pipeline:/usr/share/logstash/pipeline:ro

  redis:
    image: 'redis:5'
    networks:
      - app
    ports:
      - '6379'

  memcached:
    image: 'memcached:latest'
    networks:
      - app
    ports:
      - '11211'
    environment:
      - MEMCACHED_CACHE_SIZE=64

volumes:
  db-data:


