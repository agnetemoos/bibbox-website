# itk-version: 2.0.1
version: "3"

networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false

services:
  phpfpm:
    image: itkdev/php8.0-fpm:alpine
    restart: unless-stopped
    networks:
      - app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - PHP_MAX_EXECUTION_TIME=30
      - PHP_MEMORY_LIMIT=128M
      - COMPOSER_VERSION=2
    depends_on:
      - memcached
    volumes:
      - .:/app:delegated

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    networks:
      - app
      - frontend
    depends_on:
      - phpfpm
      - engine
    ports:
      - '80'
    volumes:
      - ${PWD}/.docker/vhost.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/app:rw
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.rule=Host(`${COMPOSE_SERVER_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_SERVER_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=websecure"

  engine:
    image: node:14
    networks:
      - app
    working_dir: /app
    depends_on:
      - redis
    environment:
      - NODE_ENV=production
    volumes:
      - ./engine:/app:delegated
    command: npm run prod

  frontend:
    image: node:14
    command: npm run build
    networks:
      - app
    working_dir: /app
    environment:
      - NODE_ENV=production
    volumes:
      - .:/app:delegated

  logstash:
    image: docker.elastic.co/logstash/logstash:7.9.1
    networks:
      - app
    ports:
      - '28777'
    volumes:
      - ${PWD}/.docker/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ${PWD}/.docker/jvm.options:/usr/share/logstash/config/jvm.options:ro
      - .docker/pipeline:/usr/share/logstash/pipeline:ro

  redis:
    image: 'redis:5'
    networks:
      - app
    ports:
      - '6379'

  memcached:
    image: 'memcached:latest'
    restart: unless-stopped
    networks:
      - app
    environment:
      - MEMCACHED_CACHE_SIZE=64
