on:
    pull_request:
        paths:
            - '**.js'
            - '**.yaml'
            - '!config/**'
            - 'package.json'
            - 'package-lock.json'
            - '!.github/workflows/pr-php.yaml'
name: Review JS
jobs:
    engine-coding-standards:
        name: Engine coding standards
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v1
              with:
                  node-version: '14.x'
            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: install
              working-directory: engine
              run: npm install
            - name: JS coding standards
              working-directory: engine
              run: npm run check-coding-standards

    engine-tests:
        name: Engine tests
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
            -   uses: actions/setup-node@v1
                with:
                    node-version: '14.x'
            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            -   name: install
                working-directory: engine
                run: npm install
            -   name: 'install plugin: bus'
                working-directory: engine/plugins/bus
                run: npm install --production
            -   name: 'install plugin: client'
                working-directory: engine/plugins/client
                run: npm install --production
            -   name: 'install plugin: config'
                working-directory: engine/plugins/config
                run: npm install --production
            -   name: 'install plugin: fbs'
                working-directory: engine/plugins/fbs
                run: npm install --production
            -   name: 'install plugin: logger'
                working-directory: engine/plugins/logger
                run: npm install --production
            -   name: 'install plugin: queue'
                working-directory: engine/plugins/queue
                run: npm install --production
            -   name: 'install plugin: server'
                working-directory: engine/plugins/server
                run: npm install --production
            -   name: 'install plugin: state_machine'
                working-directory: engine/plugins/state_machine
                run: npm install --production
            -   name: JS tests
                working-directory: engine
                run: npm test

    frontend-build:
        name: Frontend build
        runs-on: ubuntu-latest
        container: node:14
        steps:
            - uses: actions/checkout@v3
            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: Run install and build assets
              run: |
                npm install
                npm run build

    frontend-coding-standards:
        name: Frontend coding standards
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v1
              with:
                  node-version: '14.x'
            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: install
              run: npm install
            - name: React coding standards
              run: npm run check-coding-standards

    cypress:
        name: Cypress
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                browser: ["chrome"]
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup network
              run: docker network create frontend

            - name: Install client
              run: docker-compose run frontend npm

            - name: Cypress run
              run: docker-compose run cypress run --browser ${{ matrix.browser }}

            - name: Archive screenshots
              if: ${{ failure() }}
              uses: actions/upload-artifact@v3
              with:
                  name: cypress-screenhosts-${{ matrix.browser }}
                  path: cypress/screenshots
                  retention-days: 7

#    cypress:
#        runs-on: ubuntu-latest
#        steps:
#            - name: Checkout GitCode
#              uses: actions/checkout@v3
#
#            - name: Cypress run
#              uses: cypress-io/github-action@v5
#              with:
#                  component: true
#                  browser: chrome
#    # @see https://github.com/cypress-io/github-action#artifacts
