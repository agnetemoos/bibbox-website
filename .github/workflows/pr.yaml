on: pull_request
name: Review
jobs:
    engine-coding-standards:
        name: JS - Engine coding standards
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master
            - uses: actions/setup-node@v1
              with:
                  node-version: '14.x'
            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: install
              working-directory: engine
              run: npm install
            - name: JS coding standards
              working-directory: engine
              run: npm run check-coding-standards

    engine-tests:
        name: JS - Engine tests
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@master
            -   uses: actions/setup-node@v1
                with:
                    node-version: '14.x'
            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            -   name: install plugins
                working-directory: engine
                run: npm run test-install
            -   name: install
                working-directory: engine
                run: npm install
            -   name: JS tests
                working-directory: engine
                run: npm test

    frontend-coding-standards:
        name: JS - Frontend coding standards
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master
            - uses: actions/setup-node@v1
              with:
                  node-version: '14.x'
            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: install
              run: npm install
            - name: React coding standards
              run: npm run check-coding-standards

    frontend-tests:
        name: JS - Frontend tests
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master
            - uses: actions/setup-node@v1
              with:
                  node-version: '14.x'
            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: install
              run: npm install
            - name: Run tests
              run: npm run test-ci

    php-test-composer-install:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: ['7.4']
        name: PHP - Validate composer (${{ matrix.php}})
        steps:
            - uses: actions/checkout@master

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php}}
                  extension: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
                  coverage: none

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - uses: actions/cache@v1
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ matrix.php }}-composer-

            - name: Validate composer files
              run: composer validate composer.json

            - name: Composer install with exported .env variables
              run: |
                  set -a && source .env && set +a
                  APP_ENV=prod composer install --no-dev -o
